
{% extends 'base.html.twig' %}

{% block body %}
<h1> {{title}} </h1>
<p> Oui </p> 
{% if age > 18 %}
<p> Vous etes majeur </p> 
{% else %}
<p> Vous etes mineur </p> 
{% endif %}

<p> Ensuite, nous avons vu comment utiliser la programmation événementielle à l'aide du composant EventDispatcher.

Le principal intérêt est que l'on peut changer le comportement d'une application sans en changer le code, et ajouter de nombreux comportements sur une même action, sans pour autant que ces comportements soient liés entre eux.

Nous avons vu que Symfony dispose de nombreux événements natifs qui sont envoyés aux écouteurs durant le cycle de vie de l'application. 

Enfin, il est également possible de créer et de "dispatcher" ses propres événements métiers.  </p>


{% endblock %}